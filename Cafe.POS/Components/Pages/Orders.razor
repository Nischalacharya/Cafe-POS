@page "/orders"
@using Cafe.POS.Models
@using Cafe.POS.Services
@using System.Globalization
@using Cafe.POS.Models.Enums

<div class="row mt-3 mb-3">
    <div class="col-6">
        <h3>Order Index</h3>
    </div>
    <div class="col-6 text-end">
	    <button class="btn btn-outline-dark" type="button" @onclick="OpenAddUserDialog">
		    <i class="fa-solid fa-plus"></i> &nbsp; Add a new order
	    </button>
    </div>
</div>

<table class="table">
	<thead>
		<tr>
			<th>
				<div class="d-flex">
					Customer Name
				</div>
			</th>
			<th>
				<div class="d-flex">
					Coffee (Quantity)
				</div>
			</th>
			<th>
				<div class="d-flex">
					Add In (Quantity)
				</div>
			</th>
			<th>
				<div class="d-flex">
					Actual Price
				</div>
			</th>
			<th>
				<div class="d-flex">
					Paid Price
				</div>
			</th>
			<th>
				<div class="d-flex">
					Payment Mode
				</div>
			</th>
			<th>
				<div class="d-flex">
					Ordered Date
				</div>
			</th>
			<th>
				<div class="d-flex">
					Approved By
				</div>
			</th>
		</tr>
	</thead>
	<tbody>
		@{
			IEnumerable<Order> orders = OrdersList;
			
			IEnumerable<OrderAddIn> orderAddIns = OrderAddIns;

			foreach (var order in orders)
			{
				<tr>
					@{
						var addIns = orderAddIns.Where(x => x.OrderId == order.Id);
					}
					<td>
						@{
							var customer = CustomerService.GetById(order.CustomerId);
							<span>@(customer.Id == Guid.Empty ? "Customer" : customer.Username)</span>
						}
					</td>
					<td>
						@{
							var coffee = CoffeeService.GetById(order.CoffeeId);
							<span>@(coffee.Id == Guid.Empty ? "Coffee" : coffee.Name) (@order.CoffeeQuantity)</span>
						}
					</td>
					<td>
						@{
							var addInElements = (from addIn in addIns let addInItem = AddInService.GetById(addIn.AddInId) 
								let addInQuantity = addIn.AddInQuantity 
								select $"{addInItem.Name} ({addInQuantity})").ToList();
							var addInString = string.Join(", ", addInElements);
							<span>@addInString</span>
						}
					</td>
					<td class="text-end">
						@{
							var decimalValue = (from addIn in addIns 
								let addInItem = AddInService.GetById(addIn.AddInId) 
								let addInQuantity = addIn.AddInQuantity 
								select addInItem.Price * addInQuantity).Sum();
							var amount = decimalValue + coffee.Price * order.CoffeeQuantity;
							<span>@amount.ToString("N2", CultureInfo.CreateSpecificCulture("ne-NP"))</span>
						}
					</td>
					<td class="text-end">
						@order.TotalPrice.ToString("N2", CultureInfo.CreateSpecificCulture("ne-NP"))
					</td>
					<td>
                    	@order.PaymentMode
                    </td>
					<td>@order.CreatedOn.ToString("MMM dd, yyyy h:mm tt")</td>
					<td>
					@{
						var creator = UserService.GetById(order.CreatedBy);
						<span>@(creator.Id == Guid.Empty ? "Administration" : creator.Username)</span>
					}
					</td>
				</tr>
			}
		}
	</tbody>
</table>

@if(_showAddOrderDialog){
	<ModalDialog Size="modal-lg" Title="@_dialogTitle" OnClose="@OnAddOrderDialogClose" OkLabel="@_dialogOkLabel">
		<form>
			<div class="row mb-3">
				<div class="col-6">
					<label class="form-label">&nbsp;Customer</label>
					<select class="form-control" @onchange="OnCustomerSelection">
						<option disabled="" selected="" label="Select a customer"></option>
						@foreach (var item in Customers)
						{
							<option value="@item.Id">@item.Username</option>
						}
					</select>
				</div>
				<div class="col-6">
					<label class="form-label">&nbsp;Payment Mode</label>
                    <select class="form-control" @bind="_orderModel.PaymentMode">
                    	@foreach (var item in Enum.GetValues(typeof(PaymentMode)))
                    	{
                    		<option value="@item">@item</option>
                    	}
                    </select>
				</div>
			</div>
			<div class="row mb-3">
				<div class="col-6">
					<label class="form-label">&nbsp;Coffee</label>
					<select class="form-control" @bind="_orderModel.CoffeeId">
						<option selected="selected" disabled="disabled">Select a Coffee</option>
						@foreach (var item in Coffees)
						{
							<option value="@item.Id">@item.Name (Rs @item.Price.ToString("N2", CultureInfo.CreateSpecificCulture("ne-NP")))</option>
						}
					</select>
				</div>
				<div class="col-6">
					<label class="form-label">&nbsp;Coffee Quantity</label>
					<input type="number" class="form-control" @bind="_orderModel.CoffeeQuantity" placeholder="Enter the quantity of ordered coffee" @oninput="OnCoffeeQuantityChange" />
				</div>
			</div>
			@for (var i = 0; i < _orderAddInModel.Count; i++)
            {
                var currentIndex = i;
            
                <div class="row mb-3">
                    <div class="col-6">
                        <label class="form-label">&nbsp;Add In</label>
                        <select class="form-control" value="@_orderAddInModel[currentIndex].AddInId" @oninput="(e) => _orderAddInModel[currentIndex].AddInId = Guid.Parse(e.Value.ToString())">
                            <option disabled="" selected="" label="Select an add in"></option>
                            @foreach (var item in AddIns)
                            {
                                <option value="@item.Id">@item.Name (Rs @item.Price.ToString("N2", CultureInfo.CreateSpecificCulture("ne-NP")))</option>
                            }
                        </select>
                    </div>
                    <div class="col-5">
                        <label class="form-label">&nbsp;Add In Quantity</label>
                        <input type="number" class="form-control" @bind="_orderAddInModel[currentIndex].AddInQuantity" placeholder="Enter the quantity of ordered add in" @oninput="(e) => OnAddInQuantityChange(e, currentIndex)" />
                    </div>
                    <div class="col-1 mt-1">
                        <button class="btn btn-outline-dark mt-4" type="button" @onclick="AddAddIn">
                            <i class="fa-solid fa-plus"></i>
                        </button>
                    </div>
                </div>
            }

			<div class="row mb-3">
				<div class="col-6">
					<label class="form-label">&nbsp;Is Regular Customer?</label>
					@if (_isRegularCustomer != null)
					{
						if (_isRegularCustomer.Value)
						{
							<h6><span class="badge bg-success">Yes</span></h6>
						}
						else
						{
							<h6><span class="badge bg-danger">No</span></h6>
						}
					}
					else
					{
						<h6><span class="badge bg-primary">Select a customer first</span></h6>
					}
				</div>
				<div class="col-6">
					<label class="form-label">&nbsp;Complimentary Coffee?</label>
					@if (_isComplimentaryCoffee != null)
					{
						if (_isComplimentaryCoffee.Value)
						{
							<h6><span class="badge bg-success">Yes</span></h6>
						}
						else
						{
							<h6><span class="badge bg-danger">No</span></h6>
						}
					}
					else
					{
						<h6><span class="badge bg-primary">Select a customer first</span></h6>
					}
				</div>
			</div>
			<div class="row mb-3">
	            <div class="col-6">
            		<label class="form-label">&nbsp;Actual Price</label>
            		<label class="form-label">&nbsp;Rs @_actualAmount.ToString("N2", CultureInfo.CreateSpecificCulture("ne-NP"))</label>
	            </div>
	            <div class="col-6">
            		<label class="form-label">&nbsp;Payable Amount</label>
            		<label class="form-label">&nbsp;Rs @_payableAmount.ToString("N2", CultureInfo.CreateSpecificCulture("ne-NP"))</label>
	            </div>
	        </div>
			@if (!string.IsNullOrEmpty(_addOrderErrorMessage))
			{
				<ErrorMessage Type="danger" Message="@_addOrderErrorMessage" />
			}
		</form>
	</ModalDialog>
}